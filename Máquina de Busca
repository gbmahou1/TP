#include <iostream>
#include <fstream>
#include <cstdlib>
#include <cmath>
#include <stdio.h>
#include <stdlib.h>
#include <map>
#include <set>
#include <string.h>

using namespace std;

class fileList
{

public:

    fileList()
    {
        atual = &Arquivos;
        numero_arquivos = 0;
        char teste;
        cout << "Digite o nome do primeiro arquivo: \n";
        cin >> Arquivos.nome;
        numero_arquivos ++;
        cout << "Gostaria de acrescentar um novo arquivo? (s ou n) \n";
        cin >> teste;
        while(teste == 's')
        {
            atual->prox = (lista*) malloc(sizeof(lista));
            atual = atual->prox;
            cout << "Digite o nome do arquivo: \n";
            cin >> atual->nome;
            numero_arquivos ++;
            cout << "Gostaria de acrescentar um novo arquivo? (s ou n) \n";
            cin >> teste;
        }
    }

    void imprime()
    {
        lista *atual;
        atual = &Arquivos;

        int i = 0;

        while(i==0)
        {
            if(atual->prox == NULL)
            {
            cout << atual->nome <<endl;
            return;
            }
            else
            {
                cout << atual->nome <<endl;
                atual = atual->prox;
            }
        }
    }

    struct lista
    {
        char nome[50];
        lista* prox;
    }Arquivos;

    lista *atual;

    int numero_arquivos;

};



int main()
{

    fileList files;

    std::map<string, set<string> >mapa;

    typedef std::set<std::string>::iterator it;

    it iterator;

    int i;

    files.atual = &files.Arquivos;

    for(i = 0; i < files.numero_arquivos; i++)
    {

        ifstream infile;
        infile.open(files.atual->nome);

        if(infile.fail())
        {
            cout << "Falhou em inserir o arquivo " <<files.atual->nome <<endl;
        }
        else
        {
            string s;


            while(infile>>s)
            {

                int i;

                for(i = 0; i<s.length(); i++)
                {
                    if(isalnum(s[i]))
                    {
                        s[i] = tolower(s[i]);
                    }
                    else
                    {
                        s.erase(i, 1);
                    }
                }

                mapa[s].insert(files.atual->nome);
            }
        }

        files.atual = files.atual->prox;
    }

    cout << "Gostaria de buscar uma palavra? (s/n)" << endl;

    char t;

    cin >> t;

    while(t == 's')
    {
        string palavra;

        cout << "Digite uma palavra: " << endl;

        cin >> palavra;

        for(iterator = mapa[palavra].begin(); iterator != mapa[palavra].end(); iterator++)
        {
            cout << *iterator << endl;
        }

        cout << "Gostaria de buscar uma palavra? (s/n)" << endl;

        cin >> t;
    }

    return 0;

}
